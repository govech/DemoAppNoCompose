name: CI

permissions:
  contents: read
  security-events: write


on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests
        run: ./gradlew test
        continue-on-error: true

      - name: Run lint
        run: ./gradlew lint
        continue-on-error: true

      - name: Upload test and lint reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports
          path: app/build/reports/
          if-no-files-found: ignore

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build debug APK
        run: ./gradlew assembleDebug

      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

  code-quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run ktlint
        run: ./gradlew ktlintCheck
        continue-on-error: true

      - name: Run detekt
        run: ./gradlew detekt
        continue-on-error: true

      # 1️⃣ 把报告存成可下载 zip（留底）
      - name: Upload ktlint artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ktlint-report
          path: |
            **/build/reports/ktlint/
            app/build/reports/ktlint/

      - name: Upload detekt artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: detekt-report
          path: |
            **/build/reports/detekt/
            app/build/reports/detekt/
            

      # 把 SARIF 上传到 Security → Code scanning
      - name: Upload code quality reports
        if: github.event_name == 'push' # 只在 push 时上传
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: app/build/reports/ktlint/ktlintMainSourceSetCheck/ktlintMainSourceSetCheck.sarif
          category: ktlint

      - name: Upload detekt SARIF
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: app/build/reports/detekt/detekt.sarif
          category: detekt

      # 可选：质量红线（仍让 job 红脸）
      - name: Quality gate
        if: steps.ktlint.outcome == 'failure' || steps.detekt.outcome == 'failure'
        run: |
          echo "❌ Code quality checks failed"
          exit 1